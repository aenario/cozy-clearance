{"version":3,"sources":["client/contact_autocomplete.coffee","client/contact_collection.coffee","client/modal.coffee","client/modal_share_template.jade","client/modal_share_view.coffee"],"names":[],"mappings":"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","file":"/Users/m4dz/Projets/dev.cozy/apps/cozy-clearance/client-build.js","sourcesContent":["module.exports = (input, onGuestAdded, extrafilter) ->\n\n    contactCollection = require './contact_collection'\n    extrafilter ?= -> true\n\n    # email not in contact\n    input.on 'keyup', (event) ->\n        if event.which is 13 and not input.data('typeahead').shown\n            onGuestAdded input.val()\n            input.val ''\n            event.preventDefault()\n\n    # contact typeahead\n    input.typeahead\n        source: (query) ->\n            regexp = new RegExp(query)\n            contacts = contactCollection.filter (contact) ->\n                contact.match regexp\n            items = []\n            contacts.forEach (contact) ->\n                contact.get('emails').forEach (email) ->\n                    items.push\n                        id: contact.id\n                        hasPicture: contact.get 'hasPicture'\n                        display: \"#{contact.get 'name'} &lt;#{email}&gt;\"\n                        toString: -> \"#{email};#{contact.id}\"\n\n            items = items.filter extrafilter\n\n            return items\n\n        matcher: (contact) ->\n            old = $.fn.typeahead.Constructor::matcher\n            return old.call this, contact.display\n\n        sorter: (contacts) ->\n            beginswith = []\n            caseSensitive = []\n            caseInsensitive = []\n\n            while (contact = contacts.shift())\n                item = contact.display\n                if not item.toLowerCase().indexOf this.query.toLowerCase()\n                    beginswith.push contact\n                else if ~item.indexOf this.query then caseSensitive.push contact\n                else caseInsensitive.push contact\n\n            return beginswith.concat caseSensitive, caseInsensitive\n\n        highlighter: (contact) ->\n            old = $.fn.typeahead.Constructor::highlighter\n            img = if contact.hasPicture\n                '<img width=\"40\" src=\"clearance/contacts/' + contact.id + '.jpg\">&nbsp;'\n            else\n                '<img width=\"40\" src=\"images/defaultpicture.png\">&nbsp;'\n            return img + old.call this, contact.display\n\n        updater: (value) ->\n            onGuestAdded value\n            return \"\"\n","# let's put this here for now\ncollection = new Backbone.Collection()\ncollection.url = 'clearance/contacts'\n\ncollection.model = class Contact extends Backbone.Model\n    urlRoot: 'clearance/contacts'\n    match: (filter) ->\n        filter.test(@get('name')) or\n        @get('emails').some (email) -> filter.test email\n\ncollection.fetch()\ncollection.handleRealtimeContactEvent = (event) ->\n    {doctype, operation, id} = event\n    return null unless doctype is 'contact'\n    switch operation\n        when 'create'\n            model = new Contact(id: id)\n            model.fetch success: (fetched) ->\n                collection.add model\n        when 'update'\n            model = collection.get id\n            model.fetch()\n        when 'delete'\n            model = collection.get id\n            collection.remove model\n\n\nmodule.exports = collection","class Modal extends Backbone.View\n\n    id:'modal-dialog'\n    className:'modal fade'\n    attributes:\n        'data-backdrop': \"static\" #prevent bs closing by backdrop\n        'data-keyboard': \"false\"  #prevent bs closing by esc\n\n    initialize: (options) ->\n        @title ?= options.title\n        @content ?= options.content\n        @yes ?= options.yes or 'ok'\n        @no ?= options.no or 'cancel'\n        @cb ?= options.cb or ->\n        @render()\n        @saving = false\n        @$el.modal 'show'\n\n        # cut default bootstrap behaviour. Done here rather than in\n        # delegateEvents to be run before bootstrap callback.\n        @$('button.close').click (event) =>\n            event.stopPropagation()\n            @onNo()\n\n        $(document).on 'keyup', @closeOnEscape\n\n    events: ->\n        \"click #modal-dialog-no\"  : 'onNo'\n        \"click #modal-dialog-yes\" : 'onYes'\n        'click'                   : 'onClickAnywhere'\n\n    onNo: ->\n        @close()\n        @cb false\n\n    onYes: ->\n        @close()\n        @cb true\n\n    close: ->\n        return if @closing\n        @closing = true\n        @$el.modal 'hide'\n        setTimeout (=> @remove()), 500\n\n    closeOnEscape: (e) =>\n        @onNo() if e.which is 27\n\n    remove: ->\n        $(document).off 'keyup', @closeOnEscape\n        super\n\n    render: ->\n        close = $('<button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>')\n        title = $('<h4 class=\"model-title\">').text @title\n        head  = $('<div class=\"modal-header\">').append close, title\n        body  = $('<div class=\"modal-body\">').append @renderContent()\n        yesBtn= $('<button id=\"modal-dialog-yes\" class=\"btn btn-cozy\">').text @yes\n        foot  = $('<div class=\"modal-footer\">').append yesBtn\n        foot.prepend $('<button id=\"modal-dialog-no\" class=\"btn btn-link\">').text(@no) if @no\n\n        container = $('<div class=\"modal-content\">').append head, body, foot\n        container = $('<div class=\"modal-dialog\">').append container\n        $(\"body\").append @$el.append container\n\n    renderContent: -> @content\n\n    # if the target is not a child element, the click targets the backdrop\n    onClickAnywhere: (event) -> @onNo() if event.target.id is @id\n\nModal.alert = (title, content, cb) ->\n    new Modal {title, content, yes: 'ok', no: null, cb}\n\nModal.confirm = (title, content, yesMsg, noMsg, cb) ->\n    new Modal {title, content, yes: yesMsg, no:noMsg, cb}\n\nModal.error = (text, cb) ->\n    new Modal\n        title: t 'modal error'\n        content: text\n        yes: t 'modal ok'\n        no: false\n        cb: cb\n\nmodule.exports = Modal\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),t = locals_.t,type = locals_.type,model = locals_.model,clearance = locals_.clearance,makeURL = locals_.makeURL,undefined = locals_.undefined,possible_permissions = locals_.possible_permissions;\nbuf.push(\"<div><div id=\\\"select-mode-section\\\"><p>\" + (jade.escape(null == (jade_interp = t('modal question ' + type + ' shareable', {name: model.get('name')})) ? \"\" : jade_interp)) + \"</p><p><button id=\\\"share-public\\\" class=\\\"button btn-cozy\\\">\" + (jade.escape(null == (jade_interp = t('shared')) ? \"\" : jade_interp)) + \"</button>&nbsp;<button id=\\\"share-private\\\" class=\\\"button btn-cozy\\\">\" + (jade.escape(null == (jade_interp = t('private')) ? \"\" : jade_interp)) + \"</button></p></div><p>&nbsp;</p></div><!-- If no clearance are set, we consider it's a private object.-->\");\nif ( JSON.stringify(clearance) == '[]')\n{\nbuf.push(\"<p>\" + (jade.escape(null == (jade_interp = t('only you can see')) ? \"\" : jade_interp)) + \"</p>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"public-url\\\"><p>\" + (jade.escape(null == (jade_interp = t('modal shared public link msg')) ? \"\" : jade_interp)) + \"</p>\");\nif ( clearance == 'public')\n{\nbuf.push(\"<input id=\\\"public-url\\\"\" + (jade.attr(\"value\", makeURL(), true, false)) + \" class=\\\"form-control\\\"/>\");\n}\nelse\n{\nbuf.push(\"<input id=\\\"public-url\\\"\" + (jade.attr(\"value\", makeURL(), true, false)) + \" class=\\\"form-control disabled\\\"/>\");\n}\nbuf.push(\"<p>&nbsp;</p></div><p><span class=\\\"public-url\\\">\" + (jade.escape(null == (jade_interp = t('or')) ? \"\" : jade_interp)) + \"</span>&nbsp;\" + (jade.escape((jade_interp = t('modal shared with people msg')) == null ? '' : jade_interp)) + \"</p><form role=\\\"form\\\" class=\\\"input-group\\\"><input id=\\\"share-input\\\" type=\\\"text\\\"\" + (jade.attr(\"placeholder\", t('modal shared ' + type + ' custom msg'), true, false)) + \" autocomplete=\\\"off\\\" class=\\\"form-control\\\"/><a id=\\\"add-contact\\\" class=\\\"btn btn-cozy\\\">Add</a></form><ul id=\\\"share-list\\\">\");\nif ( clearance != 'public')\n{\n// iterate clearance\n;(function(){\n  var $$obj = clearance;\n  if ('number' == typeof $$obj.length) {\n\n    for (var i = 0, $$l = $$obj.length; i < $$l; i++) {\n      var rule = $$obj[i];\n\nif ( rule != undefined)\n{\nvar key = rule.key\nbuf.push(\"<li class=\\\"clearance-line\\\">\");\nif ( rule.contact)\n{\nif ( rule.contact.get('hasPicture'))\n{\nbuf.push(\"<img width=\\\"40\\\"\" + (jade.attr(\"src\", \"clearance/contacts/\" + rule.contact.id + \".jpg\", true, false)) + \"/>&nbsp;\");\n}\nelse\n{\nbuf.push(\"<img width=\\\"40\\\" src=\\\"images/defaultpicture.png\\\"/>&nbsp;\");\n}\nbuf.push(\"<span class=\\\"clearance-name\\\">\" + (jade.escape(null == (jade_interp = rule.contact.get('name')) ? \"\" : jade_interp)) + \"</span>\");\n}\nelse\n{\nbuf.push(\"<img width=\\\"40\\\" src=\\\"images/defaultpicture.png\\\"/><span class=\\\"clearance-name\\\">\" + (jade.escape(null == (jade_interp = rule.email) ? \"\" : jade_interp)) + \"</span>\");\n}\nvar keys = Object.keys(possible_permissions)\nif ( keys.length > 1)\n{\nbuf.push(\"<select\" + (jade.attr(\"data-key\", key, true, false)) + \" class=\\\"changeperm\\\">\");\n// iterate possible_permissions\n;(function(){\n  var $$obj = possible_permissions;\n  if ('number' == typeof $$obj.length) {\n\n    for (var perm = 0, $$l = $$obj.length; perm < $$l; perm++) {\n      var display = $$obj[perm];\n\nbuf.push(\"<option\" + (jade.attr(\"value\", perm, true, false)) + (jade.attr(\"selected\", rule.perm==perm, true, false)) + \">\" + (jade.escape(null == (jade_interp = ' ' + t('perm') + t(display)) ? \"\" : jade_interp)) + \"</option>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var perm in $$obj) {\n      $$l++;      var display = $$obj[perm];\n\nbuf.push(\"<option\" + (jade.attr(\"value\", perm, true, false)) + (jade.attr(\"selected\", rule.perm==perm, true, false)) + \">\" + (jade.escape(null == (jade_interp = ' ' + t('perm') + t(display)) ? \"\" : jade_interp)) + \"</option>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</select>\");\n}\nelse\n{\nbuf.push(jade.escape(null == (jade_interp = ' ' + t('perm') + possible_permissions[keys[0]]) ? \"\" : jade_interp));\n}\nbuf.push(\"<a\" + (jade.attr(\"data-key\", key, true, false)) + (jade.attr(\"title\", t(\"revoke\"), true, false)) + \" class=\\\"clearance-btn pull-right revoke\\\"><i class=\\\"icon-remove\\\"></i></a><a\" + (jade.attr(\"data-key\", key, true, false)) + (jade.attr(\"title\", t(\"see link\"), true, false)) + (jade.attr(\"href\", makeURL(key), true, false)) + \" class=\\\"clearance-btn pull-right show-link\\\"><i class=\\\"glyphicon glyphicon-link\\\"></i></a></li>\");\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var i in $$obj) {\n      $$l++;      var rule = $$obj[i];\n\nif ( rule != undefined)\n{\nvar key = rule.key\nbuf.push(\"<li class=\\\"clearance-line\\\">\");\nif ( rule.contact)\n{\nif ( rule.contact.get('hasPicture'))\n{\nbuf.push(\"<img width=\\\"40\\\"\" + (jade.attr(\"src\", \"clearance/contacts/\" + rule.contact.id + \".jpg\", true, false)) + \"/>&nbsp;\");\n}\nelse\n{\nbuf.push(\"<img width=\\\"40\\\" src=\\\"images/defaultpicture.png\\\"/>&nbsp;\");\n}\nbuf.push(\"<span class=\\\"clearance-name\\\">\" + (jade.escape(null == (jade_interp = rule.contact.get('name')) ? \"\" : jade_interp)) + \"</span>\");\n}\nelse\n{\nbuf.push(\"<img width=\\\"40\\\" src=\\\"images/defaultpicture.png\\\"/><span class=\\\"clearance-name\\\">\" + (jade.escape(null == (jade_interp = rule.email) ? \"\" : jade_interp)) + \"</span>\");\n}\nvar keys = Object.keys(possible_permissions)\nif ( keys.length > 1)\n{\nbuf.push(\"<select\" + (jade.attr(\"data-key\", key, true, false)) + \" class=\\\"changeperm\\\">\");\n// iterate possible_permissions\n;(function(){\n  var $$obj = possible_permissions;\n  if ('number' == typeof $$obj.length) {\n\n    for (var perm = 0, $$l = $$obj.length; perm < $$l; perm++) {\n      var display = $$obj[perm];\n\nbuf.push(\"<option\" + (jade.attr(\"value\", perm, true, false)) + (jade.attr(\"selected\", rule.perm==perm, true, false)) + \">\" + (jade.escape(null == (jade_interp = ' ' + t('perm') + t(display)) ? \"\" : jade_interp)) + \"</option>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var perm in $$obj) {\n      $$l++;      var display = $$obj[perm];\n\nbuf.push(\"<option\" + (jade.attr(\"value\", perm, true, false)) + (jade.attr(\"selected\", rule.perm==perm, true, false)) + \">\" + (jade.escape(null == (jade_interp = ' ' + t('perm') + t(display)) ? \"\" : jade_interp)) + \"</option>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</select>\");\n}\nelse\n{\nbuf.push(jade.escape(null == (jade_interp = ' ' + t('perm') + possible_permissions[keys[0]]) ? \"\" : jade_interp));\n}\nbuf.push(\"<a\" + (jade.attr(\"data-key\", key, true, false)) + (jade.attr(\"title\", t(\"revoke\"), true, false)) + \" class=\\\"clearance-btn pull-right revoke\\\"><i class=\\\"icon-remove\\\"></i></a><a\" + (jade.attr(\"data-key\", key, true, false)) + (jade.attr(\"title\", t(\"see link\"), true, false)) + (jade.attr(\"href\", makeURL(key), true, false)) + \" class=\\\"clearance-btn pull-right show-link\\\"><i class=\\\"glyphicon glyphicon-link\\\"></i></a></li>\");\n}\n    }\n\n  }\n}).call(this);\n\n}\nbuf.push(\"</ul>\");\n};return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","Modal = require \"./modal\"\ncontactTypeahead = require \"./contact_autocomplete\"\ncontactCollection = require \"./contact_collection\"\n\n## Helpers\n\n# randomString for immediate key generation\nrandomString = (length=32) ->\n    string = \"\"\n    string += Math.random().toString(36).substr(2) while string.length < length\n    string.substr 0, length\n\n\n# find new clearances between now and old\nclearanceDiff = (now, old) ->\n    if now is 'public'\n        return []\n    if old is 'public'\n        return now\n    # return only rules that did not exist in init state\n    return now.filter (rule) ->\n        not _.findWhere old, key: rule.key\n\n\n# convenient method for json requests\nrequest = (method, url, data, options) ->\n    params =\n        method: method\n        url: url\n        dataType: 'json'\n        data: JSON.stringify(data)\n        contentType: 'application/json; charset=utf-8'\n    $.ajax _.extend params, options\n\n\n## Modal\n\n# Modal to allow users to manage clearance on given model. A clearance object\n# is set as a model attribute.\n# A clearance is set to\n# * 'public' if there is a single link to share with any contacts\n# * an empty array or null if the model is in a private state (no one except\n#   the cozy owner can access to the mode.\n# * an array of object describing the clearance: one for for every people with\n#   whom the model is shared. Object fields: contact id, email, access key,\n#   and permissions ('r' or 'rw').\nmodule.exports = class CozyClearanceModal extends Modal\n\n    id: 'cozy-clearance-modal'\n    template_content: require './modal_share_template'\n\n    events: -> _.extend super,\n        \"click #share-public\": \"makePublic\"\n        \"click #share-private\": \"makePrivate\"\n        'click #modal-dialog-share-save': 'onSave'\n        'click .revoke': 'revoke'\n        'click .show-link': 'showLink'\n        'click #add-contact': 'onAddClicked'\n        'change select.changeperm': 'changePerm'\n\n    # Permissions are read only by default.\n    permissions: ->\n        'r': t('r')\n\n    initialize: (options) ->\n        @cb = @onClose\n        @model = options.model\n        @model.set 'clearance', @model.get('clearance') or []\n        # keep the initState for cancellation\n        @initState = JSON.parse JSON.stringify @model.get 'clearance'\n        @title = t 'sharing'\n        @yes = t 'save'\n        @no = t 'cancel'\n        super\n\n    ## Render\n\n    getRenderData: =>\n        type: @model.get('type')\n        model: @model\n        clearance: @getClearanceWithContacts()\n        makeURL: @makeURL\n        possible_permissions: @permissions()\n        t: t\n\n    # TODO: find why it isn't displayed.\n    render: ->\n        super()\n        $('.email-hint').remove()\n        $('.modal-footer').prepend $(\"<span class='pull-left email-hint'>#{t 'send email hint'}</span>\")\n\n    # This method is aimed to be overrriden.\n    renderContent: ->\n        $ '<p>Please wait</p>'\n\n    # Performs several operations:\n    # * Change the toggled button state.\n    # * Configure the contact field autocomplete type ahead.\n    # * Focus on the url or contact field depending on the configuration.\n    afterRender: ->\n        clearance = @model.get('clearance') or []\n\n        @_checkToggleButtonState clearance\n        @_configureTypeAhead clearance\n        @_firstFocus clearance\n\n        if @isPublicClearance()\n            @$('.public-url').show()\n            $('.email-hint').hide()\n        else\n            @$('.public-url').hide()\n            if @isPrivateClearance()\n                $('.email-hint').hide()\n            else\n                $('.email-hint').show()\n\n    # Change the toggled button state depending on current clearance.\n    _checkToggleButtonState: (clearance) ->\n        if typeof(clearance) is \"object\" and clearance.length is 0\n            @$('#share-private').addClass 'toggled'\n        else\n            @$('#share-public').addClass 'toggled'\n\n    # Configure the contact field autocomplete type ahead.\n    _configureTypeAhead: (clearance) ->\n        if typeof(clearance) isnt \"object\" or clearance.length > 0\n            input = @$('#share-input')\n            contactTypeahead input, @onGuestAdded, @typeaheadFilter\n\n    # Focus on the url or contact field depending on the configuration.\n    _firstFocus: (clearance) ->\n        setTimeout =>\n            if @isPublicClearance()\n                @$('#public-url').focus().select()\n            else if clearance.length > 0\n                @$('input#share-input').select()\n        , 200\n\n    # Rebuild render data and rerender the modal body.\n    refresh: ->\n        @$('.modal-body').html @template_content @getRenderData()\n        @afterRender()\n\n    ## Modes\n\n    # Display the modal public mode.\n    makePublic: ->\n        if @lastClearance?\n            @model.set clearance: @lastClearance\n        else\n            @model.set clearance:'public'\n        @refresh()\n\n    # Display the modal private mode.\n    makePrivate: ->\n        @lastClearance = @model.get 'clearance'\n        @model.set clearance: []\n        @refresh()\n\n    ## Helpers\n\n    # Build a clearance url for given key. Key is passed as a query parameter.\n    # If no key is given, no parameter is set on the URL.\n    makeURL: (key) =>\n        url = @model.getPublicURL()\n        url += '?key=' + key if key\n        return url\n\n    # Display contact in the autocmplete combo only his email is not in the\n    # current contact list.\n    typeaheadFilter: (item) =>\n        not @existsEmail item.toString().split(';')[0]\n\n    # True if the mail is not the current clearance contact list.\n    existsEmail: (email) =>\n        _.some @model.get('clearance'), (rule) ->\n            rule.email is email\n\n    # For each clearance object (rule), it checks if a Cozy Contact is linked\n    # to it. It adds a field pointing on it in that case.\n    # Warning clearance is wrongly typed. In public mode, clearance is a\n    # string. In other modes, it's an array of objects.\n    getClearanceWithContacts: (clearance) =>\n        unless clearance?\n            clearance = @model.get('clearance') or []\n\n        if typeof(clearance) is \"object\"\n            clearance = clearance.map (rule) ->\n                out = _.clone rule\n                if out.contactid\n                    out.contact = contactCollection.get rule.contactid\n                out\n        return clearance\n\n    # Save changes to server and send mail to guests if needed.\n    doSave: (sendmail, clearances) ->\n        request 'PUT', \"clearance/#{@model.id}\", @saveData(),\n            error: -> Modal.error(t 'server error occured')\n            success: (data) =>\n                # force rerender of the view because this request\n                # doesn't trigger the set\n                @model.trigger 'change', @model\n                if not sendmail then @$el.modal 'hide'\n                else\n                    request 'POST', \"clearance/#{@model.id}/send\", clearances,\n                        error: -> Modal.error(t 'mail not send')\n                        success: (data) => @$el.modal 'hide'\n\n    # Returns data to save.\n    saveData: ->\n        clearance: @model.get('clearance')\n\n    # Display link widget for given contact in the guest list.\n    showLink: (event) ->\n        line = $(event.target).parents('li')\n        if line.find('.linkshow').length is 0\n            link = $(event.currentTarget)\n            url = link.prop 'href'\n\n            line = $('<div class=\"linkshow\">')\n            label = $('<label>').text(t 'copy paste link')\n            urlField = $('<input type=\"text\">')\n                .val(url)\n\n            link.parents('li').append line.append label, urlField\n            urlField.focus().select()\n            event.preventDefault()\n        else\n            line.find('.linkshow').remove()\n\n        return false\n\n    # Returns true clearance is set as public\n    isPublicClearance: ->\n        @model.get('clearance') is 'public'\n\n    # Returns true clearance is set as public\n    isPrivateClearance: ->\n        clearance = @model.get('clearance')\n        typeof(clearance) is \"object\" and clearance.length is 0\n\n    ## Events\n\n    onAddClicked: ->\n        @onGuestAdded @$('#share-input').val()\n\n\n    # When a guest is added, it adds a new rule to the current model clearance\n    # list.\n    onGuestAdded: (result) =>\n        [email, contactid] = result.split ';'\n        isEmailEmpty = email is '' or email.indexOf('@') < 1\n\n        unless @existsEmail(email) or isEmailEmpty\n            key = randomString()\n            perm = 'r'\n\n            if @isPublicClearance()\n                clearance = []\n            else\n                clearance = @model.get('clearance')\n            clearance.push {contactid, email, key, perm}\n            @model.set clearance: clearance\n            @refresh()\n        else\n            return null\n\n    # Remove a rule from current model clearance list.\n    revoke: (event) =>\n        clearance = @model.get('clearance')\n            .filter (rule) -> rule.key isnt event.currentTarget.dataset.key\n\n\n        if clearance.length is 0\n            @model.set clearance: 'public'\n        else\n            @model.set clearance: clearance\n        @refresh()\n\n    # Change permission for given contact. Contact is find via the click\n    # event give in parameter.\n    changePerm: (event) ->\n        select = event.currentTarget\n        @model.get('clearance')\n            .filter((rule) -> rule.key is select.dataset.key)[0]\n            .perm = select.options[select.selectedIndex].value\n        @refresh()\n\n    # When modal is closed, changes are discarded. A confirmation is requested\n    # to the user.\n    onNo: =>\n        clearance = @model.get('clearance')\n        diffNews = clearanceDiff(clearance, @initState).length isnt 0\n        diffLength = clearance.length isnt @initState.length\n\n        hasChanged = diffNews or diffLength\n\n        if hasChanged\n            Modal.confirm t(\"confirm\"), t('share confirm save'), \\\n                t(\"yes\"), t(\"no\"), (confirmed) =>\n                    super if confirmed\n        else\n            super\n\n    onYes: =>\n        clearance = @model.get('clearance')\n        diffNews = clearanceDiff(clearance, @initState).length isnt 0\n        if @$('#share-input').val() and not diffNews\n            # nothing new and share-input is filled\n            # may be the user forgot to click add / press enter\n            Modal.confirm t(\"confirm\"), t('share forgot add'), \\\n                t(\"no forgot\"), t(\"yes forgot\"), (confirmed) =>\n                    super if confirmed\n        else\n            super\n\n    onClose: (saving) =>\n        if not saving\n            @model.set clearance: @initState\n        else\n            newClearances = clearanceDiff @model.get('clearance'), @initState\n            if newClearances.length\n                text = t(\"send mails question\") + newClearances\n                    .map (rule) -> rule.email\n                    .join ', '\n\n                Modal.confirm t(\"modal send mails\"), text, \\\n                    t(\"yes\"), t(\"no\"), (sendmail) =>\n                        @doSave sendmail, newClearances\n\n            else\n                @doSave false\n\n"]}